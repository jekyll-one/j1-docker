#!/usr/bin/env bash

# ------------------------------------------------------------------------------
# ~/repos/dev/helper/all/usr/jekyll/bin/j1
# J1 Docker - Helper script that defines the main control
# interface for the image
#
# Product/Info:
# https://jekyll-one.com
#
# Copyright (C) 2018 Juergen Adams
#
# J1 Template is licensed under the MIT License.
# See: https://github.com/jekyll-one/j1_template_mde/blob/master/LICENSE
# ------------------------------------------------------------------------------
# NOTE:
#
# ------------------------------------------------------------------------------
set -e

[ "$DEBUG" = "true" ] && set -x

args=($(default-args $@))
cmd_args=("${args[@]:1}")

[ "$DEBUG" = "true" ] && echo "j1 cmd_args:   ${cmd_args[@]}"
[ "$DEBUG" = "true" ] && echo "j1 default-args: ${args[@]}"

# The assumption here is that if we aren't ID 0 then
# something we wrapped, recalled us, so we need to ship
# them to the right spot.  This can happen in one
# scenario (when you do `jekyll new`.)
# ------------------------------------------------------------------------------
#if [ "$(id -u)" != "0" ]; then
#  exec $BUNDLE_BIN/jekyll "$@"
#fi

# ------------------------------------------------------------------------------
[ -d ".cache" ] && chown -R jekyll:jekyll .cache
[ -d ".jekyll-cache" ] && chown -R jekyll:jekyll .jekyll-cache
[ -d ".sass-cache" ] && chown -R jekyll:jekyll .sass-cache
[ -d "_site" ] && chown -R jekyll:jekyll _site

# Install RubyGems if a Gemfile is found AND
# the network status is detected as CONNECTED (to the Internet)
# ------------------------------------------------------------------------------
if [ -f "Gemfile" ] && connected; then
  bundle install
fi

echo "$(ruby --version)"
sup_args=""

if [[ ${args[@]} =~ generate ]]; then
  if [[ ${args[@]} =~ skip-bundle ]]; then
    exe="/usr/local/bundle/bin/j1 ${args[@]}"
  else
    exe="/usr/local/bundle/bin/j1 ${args[@]} --skip-bundle"
  fi
elif [[ ${args[@]} =~ fsp ]]; then
  exe="/usr/local/bin/j1fsp.sh ${cmd_args[@]}"
else
  exe=$BUNDLE_BIN/jekyll
fi

[ "$DEBUG" = "true" ] && echo "exe: ${exe}"

if [[ ${exe} =~ jekyll ]]; then
  [ -x "$exe" ] && exec su-exec jekyll bundle exec ruby $sup_args $exe $args
else
  ${exe}
fi

